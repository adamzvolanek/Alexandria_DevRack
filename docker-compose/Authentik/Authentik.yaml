---
version: '3'
services:
  postgresql:
    container_name: postgres-authentik
    image: postgres:12-alpine
    networks:
      - proxy
    ports:
      - ${SERVER_NAME}:5432:5432
    volumes:
      - /mnt/user/appdata/authentik/postgres/data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      - POSTGRES_USER: ${POSTGRES_USER:-authentik}
      - POSTGRES_DB: ${POSTGRES_DB:-authentik}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 5s
    restart: unless-stopped

  redis:
    container_name: redis
    image: redis:alpine
    networks:
      - proxy
    ports:
      - ${SERVER_NAME}:6379:6379
    volumes:
      - /mnt/user/appdata/redis:/redis
    environment:
      - ALLOW_EMPTY_PASSWORD: yes
      - REDIS_PASSWORD: ${REDIS_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 3s
    restart: unless-stopped

  server:
    container_name: authentik
    image: beryju/authentik:latest
    command: server
    networks:
      - proxy
    ports:
      - ${SERVER_NAME}:9000:9000
      - ${SERVER_NAME}:9443:9443
    volumes:
      - /mnt/user/appdata/authentik/authentik/templates:/templates
      - /mnt/user/appdata/authentik/authentik/geoip:/geoip
      - /var/run/docker.sock:/var/run/docker.sock
      - /mnt/user/appdata/authentik-stack/authentik/media:/media
    environment:
      - AUTHENTIK_REDIS__HOST: redis
      - AUTHENTIK_POSTGRESQL__HOST: postgres-authentik
      - AUTHENTIK_POSTGRESQL__USER: ${POSTGRES_USER:-authentik}
      - AUTHENTIK_POSTGRESQL__NAME: ${POSTGRES_DB:-authentik}
      - AUTHENTIK_POSTGRESQL__PASSWORD: ${POSTGRES_PASSWORD}
      - AUTHENTIK_ERROR_REPORTING__ENABLED: true
#      - GEOIPUPDATE_ACCOUNT_ID=null
#      - GEOIPUPDATE_LICENSE_KEY=null
#      - AUTHENTIK_AUTHENTIK__GEOIP=/geoip/GeoLite2-City.mmdb
      - AUTHENTIK_SECRET_KEY: ${SECRET_KEY}
    restart: unless-stopped

  worker:
    container_name: authentik-worker
    image: beryju/authentik:latest
    command: worker
    networks:
      - proxy
    volumes:
      - /mnt/user/appdata/authentik/authentik/backups:/backups
      - /mnt/user/appdata/authentik/authentik/media:/media
      - /mnt/user/appdata/authentik/authentik/certs:/certs
      - /var/run/docker.sock:/var/run/docker.sock
      - /mnt/user/appdata/authentik/authentik/templates:/templates
      - /mnt/user/appdata/authentik/authentik/geoip:/geoip
    environment:
      - AUTHENTIK_REDIS__HOST: redis
      - AUTHENTIK_POSTGRESQL__HOST: postgres-authentik
      - AUTHENTIK_POSTGRESQL__USER: ${POSTGRES_USER:-authentik}
      - AUTHENTIK_POSTGRESQL__NAME: ${POSTGRES_DB:-authentik}
      - AUTHENTIK_POSTGRESQL__PASSWORD: ${POSTGRES_PASSWORD}
      - AUTHENTIK_ERROR_REPORTING__ENABLED: true
      - AUTHENTIK_SECRET_KEY: ${SECRET_KEY}
      # Authentik Email Settings
      - AUTHENTIK_EMAIL__HOST: ${AUTHENTIK_EMAIL__HOST}
      - AUTHENTIL_EMAIL__PORT: ${AUTHENTIK_EMAIL__PORT}
      - AUTHENTIK_EMAIL__USERNAME: ${AUTHENTIK_EMAIL__USERNAME}
      - AUTHENTIK_EMAIL__PASSWORD: ${AUTHENTIK_EMAIL_PASSWORD}
      - AUTHENTIK_EMAIL__USE_TLS: ${AUTHENTIK_EMAIL__USE_TLS}
      - AUTHENTIK_EMAIL__USE_SSL: ${AUTHENTIK_EMAIL__USE_SSL}
      - AUTHENTIK_EMAIL__TIMEOUT: ${AUTHENTIK_EMAIL__TIMEOUT}
      - AUTHENTIK_EMAIL__FROM: ${AUTHENTIK_EMAIL__FROM}
      - AUTHENTIK_EMAIL__TIMEOUT: 10
    restart: unless-stopped

networks:
  proxy:
    name: ${DOCKER_NETWORK}
    driver: bridge
    external: true
